sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/model/json/JSONModel","sap/m/MessageBox","sap/m/MessageToast","sap/ui/core/BusyIndicator"],function(e,t,r,s,o){"use strict";return e.extend("userform.controller.UserForm",{onInit:function(){this._initAddressCache();this._initModels();this._loadUserData()},_initModels:function(){const e=new t({Email:"",Firstname:"",Lastname:"",ContractType:"variable",EnergyRate:null});this.getView().setModel(e,"userProfile");const r=new t({ID:null,Date:null,Time:null,Price:0});this.getView().setModel(r,"energyRate");const s=this.getView();s.attachEventOnce("afterRendering",this._updateContractTypeUI,this);const o=new t({PanelsAmount:0,ModulesPower:0,PanelAngle:30,PanelAzimuth:180,ID:null});this.getView().setModel(o);this.getView().setModel(new t({suggestions:[],selectedAddress:{latitude:"",longitude:"",displayName:""}}),"address");this.getView().setModel(new t({formMode:"create",isBusy:false,hasValidationErrors:false,dataLoaded:false}),"viewState")},_loadUserData:function(){o.show();const e=this.getView().getModel("viewState");e.setProperty("/isBusy",true);this._fetchUserProfile().then(()=>this._fetchEnergyRate()).then(()=>this._fetchSolarConfig()).then(()=>{e.setProperty("/dataLoaded",true);e.setProperty("/isBusy",false);this._updateContractTypeUI();o.hide()}).catch(t=>{console.error("Error loading user data:",t);r.error("Kon gebruikersgegevens niet laden: "+t.message);e.setProperty("/isBusy",false);o.hide()})},_fetchUserProfile:function(){return new Promise((e,t)=>{$.ajax({url:"/userform/getUserProfile()",type:"GET",success:t=>{if(t){const e=this.getView().getModel("userProfile");e.setData(t);const r=this.getView().getModel("viewState");if(t.ID){r.setProperty("/formMode","update")}}e()},error:e=>t(e)})})},_fetchEnergyRate:function(){return new Promise((e,t)=>{const r=this.getView().getModel("userProfile").getProperty("/ContractType");if(r!=="fixed"){e();return}$.ajax({url:"/userform/getuserEnergyRate()",type:"GET",success:t=>{if(t){const e=this.getView().getModel("energyRate");e.setData(t);const r=this.byId("energyPriceInput");if(r){r.setValue(t.Price)}}e()},error:t=>{console.warn("Error fetching energy rate, but continuing:",t);e()}})})},_fetchSolarConfig:function(){return new Promise((e,t)=>{$.ajax({url:"/userform/getUserSolarConfig()",type:"GET",success:t=>{if(t){const e=this.getView().getModel();const r=this.getView().getModel("address");e.setData({PanelsAmount:t.PanelAmount,ModulesPower:t.ModulePower,PanelAngle:t.PanelAngle,PanelAzimuth:t.PanelAzimuth,ID:t.ID});r.setProperty("/selectedAddress",{latitude:t.Latitude,longitude:t.Longitude,displayName:t.Location});const s=this.getView().getModel("viewState");s.setProperty("/formMode","update")}e()},error:e=>t(e)})})},_initAddressCache:function(){this._addressCache=this._addressCache||new Map},onSuggestAddress:async function(e){const t=(e.getParameter("suggestValue")||"").trim();const r=this.getView().getModel("address");if(t.length<2){r.setProperty("/suggestions",[]);return}if(this._addressCache.has(t)){r.setProperty("/suggestions",this._addressCache.get(t));return}if(this._suggestionAbortController){this._suggestionAbortController.abort()}this._suggestionAbortController=new AbortController;try{const e=encodeURIComponent(t);const s=await fetch(`https://nominatim.openstreetmap.org/search?q=${e}&format=json&addressdetails=1&countrycodes=be&limit=5`,{headers:{"User-Agent":"EnergyManagementSystem/1.0"},signal:this._suggestionAbortController.signal});if(!s.ok)throw new Error("Network error");const o=await s.json();const n=o.map(e=>({description:this._formatAddress(e),lat:e.lat,lon:e.lon,displayName:e.display_name||this._formatAddress(e)}));this._addressCache.set(t,n);r.setProperty("/suggestions",n)}catch(e){if(e.name!=="AbortError"){console.error("Address suggestion error:",e);s.show("Adres suggesties konden niet worden opgehaald")}}},_formatAddress:function(e){const t=e.address||{};const r=[[t.road,t.house_number].filter(Boolean).join(" "),t.postcode,t.city].filter(Boolean);return r.length>0?r.join(", "):e.display_name},onAddressSelected:function(e){const t=e.getParameter("selectedItem");if(!t)return;const r=t.getBindingContext("address");if(!r)return;const s=r.getObject();const o=this.getView().getModel("address");const n=parseFloat(parseFloat(s.lat).toFixed(6));const a=parseFloat(parseFloat(s.lon).toFixed(6));o.setProperty("/selectedAddress",{latitude:n,longitude:a,displayName:s.description||s.displayName})},onSavePress:function(){if(!this._validateForm()){s.show("Vul alle verplichte velden in");return}o.show();this._updateUserProfile().then(()=>{const e=this.getView().getModel("userProfile").getData();if(e.ContractType==="fixed"){const e=parseFloat(this.byId("energyPriceInput").getValue());if(isNaN(e)||e<=0||e>1){s.show("Voer een geldige energieprijs in (tussen 0 en 1)");o.hide();return Promise.reject(new Error("Invalid energy price"))}return new Promise(t=>{setTimeout(()=>{this._updateEnergyRate(e).then(e=>{console.log("Energy rate updated:",e);t()}).catch(e=>{console.error("Error updating energy rate:",e);r.error("Fout bij opslaan energieprijs: "+e.message);t()})},100)})}return Promise.resolve()}).then(()=>{if(!this._validateSolarConfigData()){s.show("Gebruikersprofiel succesvol opgeslagen");o.hide();return Promise.resolve()}return new Promise(e=>{setTimeout(()=>{this._updateSolarConfig().then(t=>{e(t)}).catch(t=>{console.error("Error in solar config update:",t);r.error("Fout bij opslaan configuratie: "+t.message);e(null)})},100)})}).then(e=>{if(e){s.show("Configuratie succesvol opgeslagen")}else{s.show("Gegevens succesvol opgeslagen")}o.hide()}).catch(e=>{console.error("Error saving data:",e);r.error("Fout bij opslaan: "+e.message);o.hide()})},_validateSolarConfigData:function(){const e=this.getView().getModel().getData();const t=this.getView().getModel("address").getData().selectedAddress;return e.PanelsAmount>0&&e.ModulesPower>0&&t.latitude&&t.longitude&&t.displayName},_updateUserProfile:function(){return new Promise((e,t)=>{const r=this.getView().getModel("userProfile").getData();const s={firstName:r.Firstname,lastName:r.Lastname,contractType:r.ContractType};console.log("Updating user profile with data:",s);$.ajax({url:"/userform",type:"GET",headers:{"X-CSRF-Token":"Fetch"},success:(r,o,n)=>{const a=n.getResponseHeader("X-CSRF-Token");$.ajax({url:"/userform/updateUserProfile",type:"POST",contentType:"application/json",headers:{"X-CSRF-Token":a},data:JSON.stringify(s),success:t=>{if(t){this.getView().getModel("userProfile").setData(t)}const r=this.getView().getModel("viewState");r.setProperty("/formMode","update");e(t)},error:e=>{console.error("Error updating user profile:",e.responseText);t(new Error(this._getErrorMessage(e)))}})},error:e=>{console.error("Failed to fetch CSRF token:",e.responseText);t(new Error("Kon beveiligingstoken niet ophalen"))}})})},_updateEnergyRate:function(e){return new Promise((t,r)=>{const s=parseFloat(parseFloat(e).toFixed(4));const o={Price:s};console.log("Updating energy rate with price:",s);$.ajax({url:"/userform",type:"GET",headers:{"X-CSRF-Token":"Fetch"},success:(e,s,n)=>{const a=n.getResponseHeader("X-CSRF-Token");$.ajax({url:"/userform/updateUserEnergyRate",type:"POST",contentType:"application/json",headers:{"X-CSRF-Token":a},data:JSON.stringify(o),success:e=>{if(e){this.getView().getModel("energyRate").setData(e)}t(e)},error:e=>{console.error("Error updating energy rate:",e.responseText);r(new Error(this._getErrorMessage(e)))}})},error:e=>{console.error("Failed to fetch CSRF token for energy rate:",e.responseText);r(new Error("Kon beveiligingstoken niet ophalen"))}})})},_updateSolarConfig:function(){return new Promise((e,t)=>{const r=this.getView().getModel().getData();const s=this.getView().getModel("address").getData().selectedAddress;if(!s.latitude||!s.longitude||!s.displayName){console.error("Missing address data:",s);t(new Error("Adresgegevens ontbreken"));return}const o={panelAmount:r.PanelsAmount,modulePower:r.ModulesPower,panelAngle:r.PanelAngle,panelAzimuth:r.PanelAzimuth,latitude:s.latitude,longitude:s.longitude,location:s.displayName};console.log("Sending solar config payload:",o);$.ajax({url:"/userform",type:"GET",headers:{"X-CSRF-Token":"Fetch"},success:(r,s,n)=>{const a=n.getResponseHeader("X-CSRF-Token");$.ajax({url:"/userform/updateSolarConfig",type:"POST",contentType:"application/json",headers:{"X-CSRF-Token":a},data:JSON.stringify(o),success:t=>{if(!t){console.warn("No data returned from updateSolarConfig");e({});return}this.getView().getModel().setData({PanelsAmount:t.PanelAmount,ModulesPower:t.ModulePower,PanelAngle:t.PanelAngle,PanelAzimuth:t.PanelAzimuth,ID:t.ID});const r=this.getView().getModel("viewState");r.setProperty("/formMode","update");e(t)},error:e=>{console.error("Error updating solar config:",e.responseText);t(new Error(this._getErrorMessage(e)))}})},error:e=>{console.error("Failed to fetch CSRF token for solar config:",e.responseText);t(new Error("Kon beveiligingstoken niet ophalen"))}})})},_updateContractTypeUI:function(){const e=this.getView().getModel("userProfile").getProperty("/ContractType");if(e==="fixed"){this.byId("energyPriceLabel").setVisible(true);this.byId("energyPriceInput").setVisible(true);const e=this.getView().getModel("energyRate");if(!e.getProperty("/ID")){this._fetchEnergyRate()}}else{this.byId("energyPriceLabel").setVisible(false);this.byId("energyPriceInput").setVisible(false)}const t=this.byId("contractTypeGroup");if(t){const r=e==="fixed"?0:1;t.setSelectedIndex(r)}console.log("Contract type UI updated based on:",e)},onContractTypeChange:function(e){const t=e.getParameter("selectedIndex")===0?"fixed":"variable";this.getView().getModel("userProfile").setProperty("/ContractType",t);console.log("Contract type changed to:",t);this._updateContractTypeUI()},_getErrorMessage:function(e){try{const t=JSON.parse(e.responseText);if(t&&t.error&&t.error.message){return t.error.message}}catch(e){}return e.statusText||"Onbekende fout"},_validateForm:function(){let e=true;const t=(e,t,r)=>{const s=this.byId(e);if(s){s.setValueState(t);if(r)s.setValueStateText(r)}};const r=this.getView().getModel("userProfile").getData();if(!r.Firstname||r.Firstname.trim()===""){t("firstNameInput","Error","Voornaam is verplicht");e=false}else{t("firstNameInput","None")}if(!r.Lastname||r.Lastname.trim()===""){t("lastNameInput","Error","Achternaam is verplicht");e=false}else{t("lastNameInput","None")}if(r.ContractType==="fixed"){const r=this.byId("energyPriceInput").getValue();const s=parseFloat(r);if(!r||isNaN(s)||s<=0||s>1){t("energyPriceInput","Error","Voer een geldige prijs in (tussen 0 en 1)");e=false}else{t("energyPriceInput","None")}}const s=this.getView().getModel().getData();if(!s.PanelsAmount||s.PanelsAmount<=0){t("panelsAmountInput","Error","Voer een geldig aantal panelen in");e=false}else{t("panelsAmountInput","None")}if(!s.ModulesPower||s.ModulesPower<=0){t("modulePowerInput","Error","Voer een geldig vermogen in");e=false}else{t("modulePowerInput","None")}const o=this.getView().getModel("address").getData().selectedAddress;if(!o.displayName||o.displayName.trim()===""){t("addressInput","Error","Selecteer een adres");e=false}else{t("addressInput","None")}return e}})});
//# sourceMappingURL=UserForm.controller.js.map